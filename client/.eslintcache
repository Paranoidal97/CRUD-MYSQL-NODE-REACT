[{"/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/index.js":"1","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/App.js":"2","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/components/tableHead.js":"3","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/components/navbar.js":"4","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/components/modal.js":"5","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/components/search.js":"6","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/components/pagination.js":"7"},{"size":198,"mtime":1611750767850,"results":"8","hashOfConfig":"9"},{"size":3729,"mtime":1612295240760,"results":"10","hashOfConfig":"9"},{"size":407,"mtime":1612294453614,"results":"11","hashOfConfig":"9"},{"size":3016,"mtime":1612286117264,"results":"12","hashOfConfig":"9"},{"size":2877,"mtime":1612286118525,"results":"13","hashOfConfig":"9"},{"size":532,"mtime":1612286114696,"results":"14","hashOfConfig":"9"},{"size":1550,"mtime":1612294710118,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"swbkyq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"18"},"/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/index.js",[],["37","38"],"/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/App.js",["39"],"import React, { useState, useEffect, useMemo } from 'react'\nimport Axios from 'axios'\nimport './App.css';\n\n// Icons\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\n\n// Components\nimport TableHead from \"./components/tableHead\"\nimport Navbar from \"./components/navbar\"\nimport Modal from \"./components/modal\"\nimport Search from './components/search'\nimport Pagination from './components/pagination'\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [modalShow, setModalShow] = useState(false)\n  const [id, setId] = useState()\n\n  // Pagination\n\n  const ITEMS_PER_PAGE = 3;\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalItems, setTotalItems] = useState(0)\n\n  // Search\n\n  const [search, setSearch] = useState()\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\n\n\n  useEffect(() => {\n    Axios.get('http://localhost:4000/get').then((response) => {\n      setData(response.data)\n    });\n  }, [])\n\n  const deleteWorker = (id) => {\n    Axios.delete(`http://localhost:4000/delete/${id}`)\n  }\n\n  const setVisible = (id) => {\n    setId(id);\n    setModalShow(true)\n  }\n\n  const memoData = useMemo(() => {\n    let computedData = data;\n\n    if (search) {\n      computedData = computedData.filter(\n        comment =>\n          comment.firstname.toLowerCase().includes(search.toLowerCase()) ||\n          comment.lastname.toLowerCase().includes(search.toLowerCase()) ||\n          comment.email.toLowerCase().includes(search.toLowerCase()) ||\n          comment.contact.toLowerCase().includes(search.toLowerCase())\n      );\n    }\n\n    setTotalItems(computedData.length);\n\n    //Sorting comments\n    if (sorting.field) {\n      const reversed = sorting.order === \"asc\" ? 1 : -1;\n      computedData = computedData.sort(\n        (a, b) =>\n          reversed * a[sorting.field].localeCompare(b[sorting.field])\n      );\n    }\n\n    //Current Page slice\n    return computedData.slice(\n      (currentPage - 1) * ITEMS_PER_PAGE,\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\n    );\n  }, [data, currentPage, search, sorting]);\n\n\n  return (\n    <div className=\"container-fluid p-3\">\n      <div className=\"row\">\n        <div className=\"col-md-12 \">\n          <Navbar />\n          <div className=\"row m-2\">\n            <Pagination \n              total={totalItems}\n              itemsPerPage={ITEMS_PER_PAGE}\n              currentPage={currentPage}\n              onPageChange={page => setCurrentPage(page)} />\n            <div className=\"col-md-3\">\n              <Search onSearch={(value) => {\n                setSearch(value);\n              setCurrentPage(1);\n              }\n            } />\n            </div>\n          </div>\n          <table className=\"table table-striped\">\n            <TableHead />\n            <tbody>\n              {\n                memoData.map((value) => {\n                  return (\n                    <tr key={value.id}>\n                      <td>{value.id}</td>\n                      <td>{value.firstname}</td>\n                      <td>{value.lastname}</td>\n                      <td>{value.email}</td>\n                      <td>{value.contact}</td>\n                      <td><FontAwesomeIcon icon={faEdit} onClick={() => { setVisible(value.id) }} /></td>\n                      <td><FontAwesomeIcon icon={faTrash} onClick={() => { deleteWorker(value.id) }} /></td>\n                    </tr>\n                  )\n                })\n              }\n            </tbody>\n          </table>\n          {\n            modalShow ? <Modal id={id} show={modalShow} remove={() => setModalShow(false)} /> : null\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/components/tableHead.js",["40"],"import React, { useState } from 'react'\n\nconst TableHead = () => {\n    return (\n        <thead>\n            <tr>\n                <th>id</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Email</th>\n                <th>Contact</th>\n                <th>Edit</th>\n                <th>Delete</th>\n            </tr>\n        </thead>\n    )\n}\n\nexport default TableHead\n","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/components/navbar.js",["41"],"import React, { useState } from 'react'\nimport Axios from \"axios\"\n\nimport Search from './search'\n\nfunction Navbar() {\n    const [visible, setVisible] = useState(false)\n\n    // FORM\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [contact, setContact] = useState(\"\")\n\n\n    const Submit = () => {\n        Axios.post(\"http://localhost:4000/insert\", {\n            firstname: firstName,\n            lastname: lastName,\n            email: email,\n            contact: contact\n        })\n        window.location.reload(false);\n    }\n\n    return (\n        <div>\n            <div className=\"row m-2\">\n                <div className=\"col-md-12\">\n                    <button type=\"button\" class=\"btn btn-primary\" onClick={() => setVisible(!visible)}>Add new worker</button>\n                </div>\n            </div>\n            {\n                visible ?\n                    <form >\n                        <div className=\"row m-2\">\n                            <div className=\"col\">\n                                <label htmlFor=\"exampleFormControlInput1\">First Name</label>\n                                <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"firstname\"\n                                    placeholder=\"first name\" onChange={(e) => setFirstName(e.target.value)} />\n                            </div>\n                            <div className=\"col\">\n                                <label htmlFor=\"exampleFormControlInput1\">Last Name</label>\n                                <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"lastname\"\n                                    placeholder=\"last name\" onChange={(e) => setLastName(e.target.value)} />\n                            </div>\n                            <div className=\"col\">\n                                <label htmlFor=\"exampleFormControlInput1\">Email address</label>\n                                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"email\"\n                                    placeholder=\"name@example.com\" onChange={(e) => setEmail(e.target.value)} />\n                            </div>\n                            <div className=\"col\">\n                                <label htmlFor=\"exampleFormControlInput1\">Contact </label>\n                                <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"contact\"\n                                    placeholder=\"contact\" onChange={(e) => setContact(e.target.value)} />\n                            </div>\n                            <div className=\"col mt-auto \">\n                                <button type=\"button\" class=\"btn btn-primary\" onClick={Submit}>Submit</button>\n                            </div>\n                        </div>\n                    </form>\n                    : null\n            }\n        </div>\n    )\n}\n\nexport default Navbar\n","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/components/modal.js",["42"],"import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\n\nconst Modal = ({id, show, remove}) => {\n    const [visible, setVisible] = useState(show)\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [contact, setContact] = useState(\"\")\n    \n    useEffect(() => {\n        Axios.get(`http://localhost:4000/get/${id}`).then((response) => {\n          console.log(response.data)  \n          setFirstName(response.data[0].firstname)\n          setLastName(response.data[0].lastname)\n          setEmail(response.data[0].email)\n          setContact(response.data[0].contact)\n        });\n      },[id])\n\n    const Submit = () => {\n        Axios.put(`http://localhost:4000/update/${id}`, {\n            firstname:firstName,\n            lastname:lastName,\n            email:email,\n            contact:contact\n        })\n        window.location.reload(false);\n    }\n\n    return (\n        <div className={visible ? \"modal_background\" : \"\"}>\n            <div className={visible ? \"modal.show modal_container\" : \"modal\"}>\n                <div className=\"col\">\n                    <label htmlFor=\"exampleFormControlInput1\">First Name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"firstname\"\n                        placeholder={firstName} onChange={(e) => setFirstName(e.target.value)} />\n                </div>\n                <div className=\"col\">\n                    <label htmlFor=\"exampleFormControlInput1\">Last Name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"lastname\"\n                        placeholder={lastName} onChange={(e) => setLastName(e.target.value)} />\n                </div>\n                <div className=\"col\">\n                    <label htmlFor=\"exampleFormControlInput1\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"email\"\n                        placeholder={email} onChange={(e) => setEmail(e.target.value)} />\n                </div>\n                <div className=\"col\">\n                    <label htmlFor=\"exampleFormControlInput1\">Contact </label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"contact\"\n                        placeholder={contact} onChange={(e) => setContact(e.target.value)} />\n                </div>\n                <div className=\"col mt-auto d-flex justify-content-between py-3\">\n                    <button type=\"button\" class=\"btn btn-primary\" onClick={Submit}>Submit</button>\n                    <button type=\"button\" class=\"btn btn-primary\" onClick={remove}>Cancel</button>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal\n","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/components/search.js",["43"],"import React, { useState } from 'react'\n\nconst Search = ({onSearch}) => {\n    const [search, setSearch] = useState('');\n\n    const onInputChange = (value) => {\n        setSearch(value);\n        onSearch(value);\n    }\n\n    return (\n        <div class=\"input-group\">\n                        <input type=\"search\" class=\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\n                        aria-describedby=\"search-addon\" onChange={(e) => onInputChange(e.target.value)}/>\n        </div>\n    )\n}\n\nexport default Search;","/home/luka/Pulpit/Horodysko/projekty/tabele/client/src/components/pagination.js",["44","45"],"import React, { useEffect, useState, useMemo } from \"react\";\n\nconst PaginationComponent = ({\n    total = 0,\n    itemsPerPage = 10,\n    currentPage = 1,\n    onPageChange\n}) => {\n    const [totalPages, setTotalPages] = useState(0);\n\n    useEffect(() => {\n        if (total > 0 && itemsPerPage > 0)\n            setTotalPages(Math.ceil(total / itemsPerPage));\n    }, [total, itemsPerPage]);\n\n    const paginationItems = useMemo(() => {\n        const pages = [];\n\n        for (let i = 1; i <= totalPages; i++) {\n            pages.push(\n                <li className={i === currentPage ? \"page-item active\" : \"page-item\"}\n                    key={i}\n                    onClick={() => onPageChange(i)}\n                >\n                    <span className=\"page-link\">\n                    {i}\n                    </span>\n                </li>\n            );\n        }\n\n        return pages;\n    }, [totalPages, currentPage]);\n\n    if (totalPages === 0) return null;\n\n    return (\n        <div className=\"col-md-9\">\n        <ul className=\"pagination\">\n          <li className={ currentPage === 1 ? \"page-item disabled\" : \"page-item\"} >\n            <span className=\"page-link\" onClick={() => onPageChange(currentPage - 1)}>Previous</span>\n          </li>\n            {paginationItems}\n          <li className={currentPage === totalPages ? \"page-item disabled\" : \"page-item\"} >\n            <a className=\"page-link\" onClick={() => onPageChange(currentPage + 1)}>Next</a>\n          </li>\n        </ul>\n      </div>\n    );\n};\n\nexport default PaginationComponent;",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":32,"column":19,"nodeType":"52","messageId":"53","endLine":32,"endColumn":29},{"ruleId":"50","severity":1,"message":"54","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"55","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":14},{"ruleId":"50","severity":1,"message":"56","line":5,"column":21,"nodeType":"52","messageId":"53","endLine":5,"endColumn":31},{"ruleId":"50","severity":1,"message":"57","line":4,"column":12,"nodeType":"52","messageId":"53","endLine":4,"endColumn":18},{"ruleId":"58","severity":1,"message":"59","line":33,"column":8,"nodeType":"60","endLine":33,"endColumn":33,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":45,"column":13,"nodeType":"64","endLine":45,"endColumn":84},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'setSorting' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Search' is defined but never used.","'setVisible' is assigned a value but never used.","'search' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'onPageChange'. Either include it or remove the dependency array. If 'onPageChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["67"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [totalPages, currentPage, onPageChange]",{"range":"70","text":"71"},[892,917],"[totalPages, currentPage, onPageChange]"]